/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * Diem Dev API Specification
 * Diem Dev API is REST API for client applications to interact the Diem blockchain. 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BlockMetadataTransactionAllOf
 */
export interface BlockMetadataTransactionAllOf {
    /**
     * 
     * @type {string}
     * @memberof BlockMetadataTransactionAllOf
     */
    type: string;
    /**
     * All bytes data are represented as hex-encoded string prefixed with `0x` and fulfilled with
     * two hex digits per byte.
     * 
     * Different with `Address` type, hex-encoded bytes should not trim any zeros.
     * @type {string}
     * @memberof BlockMetadataTransactionAllOf
     */
    id: string;
    /**
     * Unsiged int64 type value
     * @type {string}
     * @memberof BlockMetadataTransactionAllOf
     */
    round: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof BlockMetadataTransactionAllOf
     */
    previousBlockVotes: Array<string>;
    /**
     * Hex-encoded 16 bytes Diem account address.
     * 
     * Prefixed with `0x` and leading zeros are trimmed.
     * 
     * See [doc](https://diem.github.io/move/address.html) for more details.
     * @type {string}
     * @memberof BlockMetadataTransactionAllOf
     */
    proposer: string;
    /**
     * Timestamp in microseconds, e.g. ledger / block creation timestamp.
     * @type {string}
     * @memberof BlockMetadataTransactionAllOf
     */
    timestamp: string;
}

export function BlockMetadataTransactionAllOfFromJSON(json: any): BlockMetadataTransactionAllOf {
    return BlockMetadataTransactionAllOfFromJSONTyped(json, false);
}

export function BlockMetadataTransactionAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockMetadataTransactionAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'id': json['id'],
        'round': json['round'],
        'previousBlockVotes': json['previous_block_votes'],
        'proposer': json['proposer'],
        'timestamp': json['timestamp'],
    };
}

export function BlockMetadataTransactionAllOfToJSON(value?: BlockMetadataTransactionAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'id': value.id,
        'round': value.round,
        'previous_block_votes': value.previousBlockVotes,
        'proposer': value.proposer,
        'timestamp': value.timestamp,
    };
}

