/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * Diem Dev API Specification
 * Diem Dev API is REST API for client applications to interact the Diem blockchain. 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Delete account resource change.
 * @export
 * @interface DeleteResource
 */
export interface DeleteResource {
    /**
     * 
     * @type {string}
     * @memberof DeleteResource
     */
    type: string;
    /**
     * Hex-encoded 16 bytes Diem account address.
     * 
     * Prefixed with `0x` and leading zeros are trimmed.
     * 
     * See [doc](https://diem.github.io/move/address.html) for more details.
     * @type {string}
     * @memberof DeleteResource
     */
    address: string;
    /**
     * String representation of an on-chain Move struct type.
     * 
     * It is a combination of:
     *   1. `Move module address`, `module name` and `struct name` joined by `::`.
     *   2. `struct generic type parameters` joined by `, `.
     * 
     * Examples:
     *   * `0x1::Diem::Diem<0x1::XDX::XDX>`
     *   * `0x1::Abc::Abc<vector<u8>, vector<u64>>`
     *   * `0x1::DiemAccount::AccountOperationsCapability`
     * 
     * Note:
     *   1. Empty chars should be ignored when comparing 2 struct tag ids.
     *   2. When used in an URL path, should be encoded by url-encoding (AKA percent-encoding).
     * 
     * See [doc](https://diem.github.io/move/structs-and-resources.html) for more details.
     * @type {string}
     * @memberof DeleteResource
     */
    resource: string;
}

export function DeleteResourceFromJSON(json: any): DeleteResource {
    return DeleteResourceFromJSONTyped(json, false);
}

export function DeleteResourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeleteResource {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'address': json['address'],
        'resource': json['resource'],
    };
}

export function DeleteResourceToJSON(value?: DeleteResource | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'address': value.address,
        'resource': value.resource,
    };
}

